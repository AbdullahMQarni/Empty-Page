{"ast":null,"code":"var _jsxFileName = \"D:\\\\Max course\\\\myPractice\\\\Empty Page\\\\src\\\\components\\\\Name.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Name(_ref) {\n  _s();\n  let {\n    name\n  } = _ref;\n  const [isEditing, setIsEditing] = useState(false);\n  const [updating, setUpdating] = useState(name);\n  function handleIsEditing() {\n    setIsEditing(wasEditing => !wasEditing);\n  }\n  function handleUpdatingName(event) {\n    setUpdating(event.target.value);\n  }\n  let nameVariable = /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: updating\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 22\n  }, this);\n  let bttnStatus = \"Edit\";\n  if (isEditing) {\n    nameVariable = /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      required: true,\n      id: \"NameInput\",\n      value: updating,\n      placeholder: \"Name\",\n      onChange: handleUpdatingName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n    bttnStatus = \"Save\";\n  }\n  let welcomeMessage = \"YourName\";\n  if (updating === \"YourName\") {\n    welcomeMessage = \"\";\n  } else if (updating === \"\") {\n    welcomeMessage = \"\";\n  } else if (updating === \"Wail\" || updating === \"Abdullah\" || updating === \"Rahaf\" || updating === \"Wisam\") {\n    welcomeMessage = \"Welcome Dear and the most welcome \".concat(updating);\n  } else if (updating === \"Mohammed\") {\n    welcomeMessage = \"Where is WBS ?????\";\n  } else if (updating === \"Mahito\") {\n    welcomeMessage = \"I HATE YOU!!!\";\n  } else {\n    welcomeMessage = \"just Welcome \".concat(updating);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"What is Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), nameVariable, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleIsEditing,\n        children: bttnStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), welcomeMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Name, \"F3EAVxxV5YLWU58Wp7Uz5jRG4FY=\");\n_c = Name;\nvar _c;\n$RefreshReg$(_c, \"Name\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Name","_ref","_s","name","isEditing","setIsEditing","updating","setUpdating","handleIsEditing","wasEditing","handleUpdatingName","event","target","value","nameVariable","children","fileName","_jsxFileName","lineNumber","columnNumber","bttnStatus","type","required","id","placeholder","onChange","welcomeMessage","concat","className","onClick","_c","$RefreshReg$"],"sources":["D:/Max course/myPractice/Empty Page/src/components/Name.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function Name({ name }) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const [updating, setUpdating] = useState(name);\r\n\r\n  function handleIsEditing() {\r\n    setIsEditing((wasEditing) => !wasEditing);\r\n  }\r\n\r\n  function handleUpdatingName(event) {\r\n    setUpdating(event.target.value);\r\n  }\r\n\r\n  let nameVariable = <h3>{updating}</h3>;\r\n  let bttnStatus = \"Edit\";\r\n\r\n  if (isEditing) {\r\n    nameVariable = (\r\n      <input\r\n        type=\"text\"\r\n        required\r\n        id=\"NameInput\"\r\n        value={updating}\r\n        placeholder=\"Name\"\r\n        onChange={handleUpdatingName}\r\n      />\r\n    );\r\n    bttnStatus = \"Save\";\r\n  }\r\n\r\n  let welcomeMessage = \"YourName\";\r\n  if (updating === \"YourName\") {\r\n    welcomeMessage = \"\";\r\n  } else if (updating === \"\") {\r\n    welcomeMessage = \"\";\r\n  } else if (\r\n    updating === \"Wail\" ||\r\n    updating === \"Abdullah\" ||\r\n    updating === \"Rahaf\" ||\r\n    updating === \"Wisam\"\r\n  ) {\r\n    welcomeMessage = `Welcome Dear and the most welcome ${updating}`;\r\n  } else if (updating === \"Mohammed\") {\r\n    welcomeMessage = \"Where is WBS ?????\";\r\n  } else if (updating === \"Mahito\") {\r\n    welcomeMessage = \"I HATE YOU!!!\";\r\n  } else {\r\n    welcomeMessage = `just Welcome ${updating}`;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <label>What is Your Name</label>\r\n        <br />\r\n        {nameVariable}\r\n        <br />\r\n        <button onClick={handleIsEditing}>{bttnStatus}</button>\r\n        <br />\r\n        {welcomeMessage}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}